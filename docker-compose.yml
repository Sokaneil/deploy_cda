services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpass123
      MYSQL_DATABASE: school_app
      MYSQL_USER: admin_user
      MYSQL_PASSWORD: your_password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "admin_user", "-pyour_password"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  backend:
    build: ./Back_cda
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_TYPE: mysql
      DB_STORAGE: ./database.sqlite
      DB_HOST: db
      DB_PORT: 3306
      DB_USERNAME: admin_user
      DB_PASSWORD: your_password
      DB_NAME: school_app
      ARGON2_MEMORY_COST: 65536
      ARGON2_TIME_COST: 3
      ARGON2_PARALLELISM: 1
      JWT_SECRET: your_very_secure_secret_key_here
      JWT_ACCESS_EXPIRATION: 15m
      JWT_REFRESH_EXPIRATION: 7d
      ALLOWED_ORIGIN: "*"
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build: ./front_cda
    environment:
      NODE_ENV: development
      PORT: 3001
      NEXT_PUBLIC_API_URL: http://localhost/api  # ← This should work
    networks:
      - app-network
    depends_on:
      - backend
    restart: unless-stopped

  caddy:
    image: caddy:2.7-alpine
    ports:
      - "80:80"      # ← External access port
      - "443:443"    # ← HTTPS (if you get a domain later)
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - app-network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  mysql_data:
  caddy_data:
  caddy_config:

networks:
  app-network:
    driver: bridge